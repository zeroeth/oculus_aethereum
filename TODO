/* TODO

   SHORTLIST
   ---------
   * remove similar theme
   * clock like theme (one rotates per click of other)
   * amplitude multiply
   * width to percent
   * view starting offset change
   * abstract color and brightness rendering
   * fading
   * percent offset (for fading between multiple items..)
   ---------

   - theme load/unload so we can swap every 10 seconds
   - eye 'render' code which does blend, or average or subtract/multiple
   - render black masks as a color
   - higher fidelity color store so fading works?

   pulser (frequency of human breath.. like macbook)
   color changer
   blinker (duty cycle)
   sparkler (random position)
   throbber (widens and shrinks)
   rainbow bar

   - pointers unavoidable because of scope of objects? unless they are global. Safe way to use pointers? to avoid nulls.

   - avoid update and add? static list of updates to run, pass in eye to each constructor (might be easier to share themes)
   - convert 8ts to 16ts for longer segments
   **** THIS combining multiple features or state based modification of the leds? to avoid needing permutations, you just have each one do something to the whole array of color
     or a spot has all the attributes and you assign it various 'affectors'
     (ie color it, rotatet it, mask off portions of it ?)
   - different signatures for each type?
   - multiplier? so a wobbler could overlap a few rotations.. and seemingly 'fast' wind or only rotate 50%

   theme:
    3 dots evenly spread, circling with a trail
    4 dots doing a small wiggle with a trail

   theme:
    large static 1/2 arc with another half circle color blending

   theme:
    each eye has a grower on opposite sides

   theme:
    half circler with faster half circler underneath it

   theme:
    a bunch of single circlers with speeds at a harmonic to meet eventually. (0.1, 0.2 etc) with additive blending

   theme:
    two opposite circlers that meet perfectly horizontal
*/

